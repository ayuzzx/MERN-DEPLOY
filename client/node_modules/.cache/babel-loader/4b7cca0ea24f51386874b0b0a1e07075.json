{"ast":null,"code":"export const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      const alreadyExists = state.cartItems.find(item => item._id === action.payload._id);\n\n      if (alreadyExists) {\n        return { ...state,\n          cartItems: state.cartItems.map(item => item._id === action.payload._id ? action.payload : item)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, action.payload]\n        };\n      }\n\n    case 'DELETE_FROM_CART':\n      return { ...state,\n        cartItems: state.cartItems.filter(item => item._id !== action.payload._id)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/ayush/OneDrive/Desktop/FINAL PROJECT/MERN PIZZA/client/src/reducers/cartReducer.js"],"names":["cartReducer","state","cartItems","action","type","alreadyExists","find","item","_id","payload","map","filter"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAC,CAACC,KAAK,GAAC;AAACC,EAAAA,SAAS,EAAG;AAAb,CAAP,EAA0BC,MAA1B,KAAmC;AAExD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAK,aAAL;AAEA,YAAMC,aAAa,GAAGJ,KAAK,CAACC,SAAN,CAAgBI,IAAhB,CAAqBC,IAAI,IAAGA,IAAI,CAACC,GAAL,KAAWL,MAAM,CAACM,OAAP,CAAeD,GAAtD,CAAtB;;AACA,UAAGH,aAAH,EACA;AACO,eAAM,EACF,GAAGJ,KADD;AAEFC,UAAAA,SAAS,EAAGD,KAAK,CAACC,SAAN,CAAgBQ,GAAhB,CAAoBH,IAAI,IAAGA,IAAI,CAACC,GAAL,KAAWL,MAAM,CAACM,OAAP,CAAeD,GAA1B,GAAgCL,MAAM,CAACM,OAAvC,GAAiDF,IAA5E;AAFV,SAAN;AAIN,OAND,MAOI;AACJ,eAAM,EAEF,GAAGN,KAFD;AAGFC,UAAAA,SAAS,EAAC,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAsBC,MAAM,CAACM,OAA7B;AAHR,SAAN;AAQH;;AACD,SAAK,kBAAL;AAA0B,aAAM,EAE5B,GAAGR,KAFyB;AAG5BC,QAAAA,SAAS,EAAGD,KAAK,CAACC,SAAN,CAAgBS,MAAhB,CAAuBJ,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAYL,MAAM,CAACM,OAAP,CAAeD,GAA1D;AAHgB,OAAN;;AAMvB;AAAU,aAAOP,KAAP;AA5Bb;AAgCH,CAlCM","sourcesContent":["export const cartReducer=(state={cartItems : []} , action)=>{\n\n    switch (action.type)\n    {\n        case 'ADD_TO_CART' : \n        \n        const alreadyExists = state.cartItems.find(item=> item._id===action.payload._id)\n        if(alreadyExists)\n        {\n               return{\n                   ...state , \n                   cartItems : state.cartItems.map(item=> item._id===action.payload._id ? action.payload : item)\n               }\n        }\n        else{\n        return{\n            \n            ...state , \n            cartItems:[...state.cartItems , action.payload]\n\n        }\n\n   \n    }\n    case 'DELETE_FROM_CART' : return{\n        \n        ...state , \n        cartItems : state.cartItems.filter(item => item._id !==action.payload._id)\n\n    }\n       default : return state\n    }\n        \n\n}"]},"metadata":{},"sourceType":"module"}