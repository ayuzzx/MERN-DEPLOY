{"ast":null,"code":"import axios from \"axios\";\nexport const getAllPizzas = () => async dispatch => {\n  dispatch({\n    type: 'GET_PIZZAS_REQUEST'\n  });\n\n  try {\n    const response = await axios.get('/api/pizzas/getallpizzas');\n    console.log(response);\n    dispatch({\n      type: 'GET_PIZZAS_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_PIZZAS_FAILED',\n      payload: error\n    });\n  }\n};\nexport const getPizzaById = pizzaid => async dispatch => {\n  dispatch({\n    type: 'GET_PIZZABYID_REQUEST'\n  });\n\n  try {\n    const response = await axios.post('/api/pizzas/getpizzabyid', {\n      pizzaid\n    });\n    console.log(response);\n    dispatch({\n      type: 'GET_PIZZABYID_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_PIZZABYID_FAILED',\n      payload: error\n    });\n  }\n};\nexport const filterPizzas = (searchkey, category) => async dispatch => {\n  dispatch({\n    type: 'GET_PIZZAS_REQUEST'\n  });\n\n  try {\n    var filteredPizzas;\n    const response = await axios.get('/api/pizzas/getallpizzas');\n    filteredPizzas = response.data.filter(pizza => pizza.name.toLowerCase().includes(searchkey));\n\n    if (category != 'all') {\n      filteredPizzas = response.data.filter(pizza => pizza.category.toLowerCase() == category);\n    }\n\n    dispatch({\n      type: 'GET_PIZZAS_SUCCESS',\n      payload: filteredPizzas\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_PIZZAS_FAILED',\n      payload: error\n    });\n  }\n};\nexport const addPizza = pizza => async dispatch => {\n  dispatch({\n    type: 'ADD_PIZZA_REQUEST'\n  });\n\n  try {\n    const response = await axios.post('/api/pizzas/addpizza', {\n      pizza\n    });\n    console.log(response);\n    dispatch({\n      type: 'ADD_PIZZA_SUCCESS'\n    });\n  } catch (error) {\n    dispatch({\n      type: 'ADD_PIZZA_FAILED',\n      payload: error\n    });\n  }\n};\nexport const editPizza = editedpizza => async dispatch => {\n  dispatch({\n    type: 'EDIT_PIZZA_REQUEST'\n  });\n\n  try {\n    const response = await axios.post('/api/pizzas/editpizza', {\n      editedpizza\n    });\n    console.log(response);\n    dispatch({\n      type: 'EDIT_PIZZA_SUCCESS'\n    });\n    window.location.href = '/admin/pizzaslist';\n  } catch (error) {\n    dispatch({\n      type: 'EDIT_PIZZA_FAILED',\n      payload: error\n    });\n  }\n};\nexport const deletePizza = pizzaid => async dispatch => {\n  try {\n    const response = await axios.post('/api/pizzas/deletepizza', {\n      pizzaid\n    });\n    alert('Pizza Deleted Successfully');\n    console.log(response);\n    window.location.reload();\n  } catch (error) {\n    alert('Something went wrong');\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/ayush/OneDrive/Desktop/FINAL PROJECT/MERN PIZZA/client/src/actions/pizzaActions.js"],"names":["axios","getAllPizzas","dispatch","type","response","get","console","log","payload","data","error","getPizzaById","pizzaid","post","filterPizzas","searchkey","category","filteredPizzas","filter","pizza","name","toLowerCase","includes","addPizza","editPizza","editedpizza","window","location","href","deletePizza","alert","reload"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nexport const getAllPizzas=()=>async dispatch=>{\n\n    dispatch({type:'GET_PIZZAS_REQUEST'})\n\n    try {\n        const response = await axios.get('/api/pizzas/getallpizzas')\n        console.log(response);\n        dispatch({type:'GET_PIZZAS_SUCCESS' , payload : response.data})\n       \n    } catch (error) {\n        dispatch({type:'GET_PIZZAS_FAILED' , payload : error})\n    }\n\n}\n\nexport const getPizzaById=(pizzaid)=>async dispatch=>{\n\n    dispatch({type:'GET_PIZZABYID_REQUEST'})\n\n    try {\n        const response = await axios.post('/api/pizzas/getpizzabyid' , {pizzaid})\n        console.log(response);\n        dispatch({type:'GET_PIZZABYID_SUCCESS' , payload : response.data})\n    } catch (error) {\n        dispatch({type:'GET_PIZZABYID_FAILED' , payload : error})\n    }\n\n}\n\nexport const filterPizzas=(searchkey , category)=>async dispatch=>{\n\n  \n    dispatch({type:'GET_PIZZAS_REQUEST'})\n\n    try {\n        var filteredPizzas ;\n        const response = await axios.get('/api/pizzas/getallpizzas')\n        filteredPizzas = response.data.filter(pizza=>pizza.name.toLowerCase().includes(searchkey))\n         \n        if(category!='all')\n        {\n            filteredPizzas = response.data.filter(pizza=>pizza.category.toLowerCase()==category)\n\n        }\n        dispatch({type:'GET_PIZZAS_SUCCESS' , payload : filteredPizzas})\n    } catch (error) {\n        dispatch({type:'GET_PIZZAS_FAILED' , payload : error})\n    }\n\n}\n\nexport const addPizza=(pizza)=>async dispatch=>{\n    dispatch({type:'ADD_PIZZA_REQUEST'})\n    try {\n        const response= await axios.post('/api/pizzas/addpizza' , {pizza})\n        console.log(response);\n        dispatch({type:'ADD_PIZZA_SUCCESS'})\n    } catch (error) {\n        dispatch({type:'ADD_PIZZA_FAILED' , payload : error})\n    }\n}\n\nexport const editPizza=(editedpizza)=>async dispatch=>{\n    dispatch({type:'EDIT_PIZZA_REQUEST'})\n    try {\n        const response= await axios.post('/api/pizzas/editpizza' , {editedpizza})\n        console.log(response);\n        dispatch({type:'EDIT_PIZZA_SUCCESS'})\n        window.location.href='/admin/pizzaslist'\n    } catch (error) {\n        dispatch({type:'EDIT_PIZZA_FAILED' , payload : error})\n    }\n}\n\nexport const deletePizza=(pizzaid)=>async dispatch=>{\n\ntry {\n    const response =await axios.post('/api/pizzas/deletepizza' , {pizzaid})\n    alert('Pizza Deleted Successfully')\n    console.log(response);\n    window.location.reload()\n} catch (error) {\n    alert('Something went wrong')\n    console.log(error);\n}\n       \n\n}\n"]},"metadata":{},"sourceType":"module"}