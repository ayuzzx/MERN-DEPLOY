{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { getAllPizzasReducer, addPizzaReducer, getPizzaByIdReducer, editPizzaReducer } from './reducers/pizzaReducers';\nimport { cartReducer } from './reducers/cartReducer';\nimport { loginUserReducer, registerUserReducer, getAllUsersReducer } from './reducers/userReducer';\nimport { placeOrderReducer, getUserOrdersReducer, getAllOrdersReducer } from './reducers/orderReducer';\nconst finalReducer = combineReducers({\n  getAllPizzasReducer: getAllPizzasReducer,\n  cartReducer: cartReducer,\n  registerUserReducer: registerUserReducer,\n  loginUserReducer: loginUserReducer,\n  placeOrderReducer: placeOrderReducer,\n  getUserOrdersReducer: getUserOrdersReducer,\n  addPizzaReducer: addPizzaReducer,\n  getPizzaByIdReducer: getPizzaByIdReducer,\n  editPizzaReducer: editPizzaReducer,\n  getAllOrdersReducer: getAllOrdersReducer,\n  getAllUsersReducer: getAllUsersReducer\n});\nconst cartItems = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst currentUser = localStorage.getItem('currentUser') ? JSON.parse(localStorage.getItem('currentUser')) : null;\nconst initialState = {\n  cartReducer: {\n    cartItems: cartItems\n  },\n  loginUserReducer: {\n    currentUser: currentUser\n  }\n};\nconst composeEnhancers = composeWithDevTools({});\nconst store = createStore(finalReducer, initialState, composeEnhancers(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["C:/Users/ayush/OneDrive/Desktop/FINAL PROJECT/MERN PIZZA/client/src/store.js"],"names":["combineReducers","createStore","applyMiddleware","thunk","composeWithDevTools","getAllPizzasReducer","addPizzaReducer","getPizzaByIdReducer","editPizzaReducer","cartReducer","loginUserReducer","registerUserReducer","getAllUsersReducer","placeOrderReducer","getUserOrdersReducer","getAllOrdersReducer","finalReducer","cartItems","localStorage","getItem","JSON","parse","currentUser","initialState","composeEnhancers","store"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AAEA,SAAQC,WAAR,EAAsBC,eAAtB,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAASC,mBAAT,EAA+BC,eAA/B,EAAiDC,mBAAjD,EAAuEC,gBAAvE,QAA8F,0BAA9F;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,EAAkDC,kBAAlD,QAA2E,wBAA3E;AACA,SAASC,iBAAT,EAA6BC,oBAA7B,EAAoDC,mBAApD,QAA+E,yBAA/E;AAGA,MAAMC,YAAY,GAAGhB,eAAe,CAAC;AACjCK,EAAAA,mBAAmB,EAAGA,mBADW;AAEjCI,EAAAA,WAAW,EAAGA,WAFmB;AAGjCE,EAAAA,mBAAmB,EAAGA,mBAHW;AAIjCD,EAAAA,gBAAgB,EAACA,gBAJgB;AAKjCG,EAAAA,iBAAiB,EAAGA,iBALa;AAMjCC,EAAAA,oBAAoB,EAAGA,oBANU;AAOjCR,EAAAA,eAAe,EAAGA,eAPe;AAQjCC,EAAAA,mBAAmB,EAAGA,mBARW;AASjCC,EAAAA,gBAAgB,EAAGA,gBATc;AAUjCO,EAAAA,mBAAmB,EAAGA,mBAVW;AAWjCH,EAAAA,kBAAkB,EAAGA;AAXY,CAAD,CAApC;AAcA,MAAMK,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,EAAtG;AAEA,MAAMG,WAAW,GAAGJ,YAAY,CAACC,OAAb,CAAqB,aAArB,IAAsCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAtC,GAAwF,IAA5G;AAEA,MAAMI,YAAY,GAAG;AAChBd,EAAAA,WAAW,EAAG;AACXQ,IAAAA,SAAS,EAAEA;AADA,GADE;AAIhBP,EAAAA,gBAAgB,EAAE;AACdY,IAAAA,WAAW,EAAGA;AADA;AAJF,CAArB;AASA,MAAME,gBAAgB,GAAEpB,mBAAmB,CAAC,EAAD,CAA3C;AAEA,MAAMqB,KAAK,GAAGxB,WAAW,CAACe,YAAD,EAAgBO,YAAhB,EAA+BC,gBAAgB,CAACtB,eAAe,CAACC,KAAD,CAAhB,CAA/C,CAAzB;AAEA,eAAesB,KAAf","sourcesContent":["import {combineReducers} from 'redux'\n\nimport {createStore , applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\n\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport { getAllPizzasReducer , addPizzaReducer , getPizzaByIdReducer , editPizzaReducer} from './reducers/pizzaReducers'\nimport { cartReducer } from './reducers/cartReducer'\nimport { loginUserReducer, registerUserReducer  , getAllUsersReducer} from './reducers/userReducer'\nimport { placeOrderReducer , getUserOrdersReducer , getAllOrdersReducer } from './reducers/orderReducer'\n\n\nconst finalReducer = combineReducers({\n    getAllPizzasReducer : getAllPizzasReducer,\n    cartReducer : cartReducer,\n    registerUserReducer : registerUserReducer,\n    loginUserReducer:loginUserReducer,\n    placeOrderReducer : placeOrderReducer,\n    getUserOrdersReducer : getUserOrdersReducer,\n    addPizzaReducer : addPizzaReducer,\n    getPizzaByIdReducer : getPizzaByIdReducer,\n    editPizzaReducer : editPizzaReducer,\n    getAllOrdersReducer : getAllOrdersReducer,\n    getAllUsersReducer : getAllUsersReducer\n})\n\nconst cartItems = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst currentUser = localStorage.getItem('currentUser') ? JSON.parse(localStorage.getItem('currentUser')) : null\n\nconst initialState = {\n     cartReducer : {\n        cartItems: cartItems\n     },\n     loginUserReducer :{\n         currentUser : currentUser\n     }\n}\n\nconst composeEnhancers= composeWithDevTools({})\n\nconst store = createStore(finalReducer , initialState , composeEnhancers(applyMiddleware(thunk)))\n\nexport default store"]},"metadata":{},"sourceType":"module"}